version: '3.8'
services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"
      - "8020:8020"
    volumes:
      - namenode_data:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    ports:
      - "9864:9864"
    volumes:
      - datanode_data:/hadoop/dfs/data

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    environment:
      - ENABLE_INIT_DAEMON=false
      - SPARK_MODE=master
    ports:
      - "8080:8080"
    volumes:
      - ./out/artifacts/spark_hdfs_jar/spark-hdfs.jar:/opt/spark-apps/spark-hdfs.jar
    depends_on:
      - namenode
      - mongodb
      - kafka

  spark-worker:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker
    environment:
      - ENABLE_INIT_DAEMON=false
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - spark-master
      - datanode
      - mongodb
      - kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-tools:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-tools
    command: [ "sleep", "infinity" ]
    depends_on:
      - kafka


  policy-service:
    build:
      context: ../policy-service
    container_name: policy-service
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - mongodb
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

volumes:
  namenode_data:
  datanode_data:
  mongo_data:
