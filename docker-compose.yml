version: '3.8'
services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"   # HDFS Web UI
      - "8020:8020"   # HDFS RPC
    volumes:
      - namenode_data:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    ports:
      - "9864:9864"   # Datanode Web UI
    volumes:
      - datanode_data:/hadoop/dfs/data
# from here i got the spark master and worker üòÅ‚ù§
#https://github.com/big-data-europe/docker-spark
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    environment:
      - ENABLE_INIT_DAEMON=false
      - SPARK_MODE=master
    ports:
      - "8080:8080"   # Spark Master UI
    volumes:
      - ./out/artifacts/spark_hdfs_jar/spark-hdfs.jar:/opt/spark-apps/spark-hdfs.jar #this to map the local jar to the image so we don‚Äôt need to rebuild the image each time build the code
    depends_on:
      - namenode

  spark-worker:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker
    environment:
      - ENABLE_INIT_DAEMON=false
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - spark-master
      - datanode

volumes:
  namenode_data:
  datanode_data:
