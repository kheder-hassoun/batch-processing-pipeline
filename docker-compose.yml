services:

  # -------------------------------
  # HDFS (Hadoop)
  # -------------------------------
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=autocomplete-hdfs
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"
      - "8020:8020"
    volumes:
      - namenode_data:/hadoop/dfs/name
    networks:
      - autocomplete-net

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - namenode
    ports:
      - "9864:9864"
    volumes:
      - datanode_data:/hadoop/dfs/data
    networks:
      - autocomplete-net

  # -------------------------------
  # Spark
  # -------------------------------
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - 7077:7077
      - 8080:8080
    volumes:
      - ./target/spark-hdfs-1.0-SNAPSHOT-jar-with-dependencies.jar:/opt/spark-apps/spark-hdfs.jar
      - ./mysql-connector/mysql-connector-j-8.0.33.jar:/opt/spark/jars/mysql-connector-j-8.0.33.jar

    networks:
      - autocomplete-net

  spark-worker:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    networks:
      - autocomplete-net

  # -------------------------------
  # MySQL (Temp DB)
  # -------------------------------
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: autocomplete
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - autocomplete-net

  # -------------------------------
  # Kafka & Zookeeper
  # -------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - autocomplete-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - autocomplete-net

  # -------------------------------
  # Debezium (CDC for MySQL)
  # -------------------------------
  debezium:
    image: debezium/connect:2.5
    container_name: debezium
    depends_on:
      - kafka
      - mysql
    ports:
      - 8083:8083
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=debezium
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - autocomplete-net

  # -------------------------------
  # Redis Cluster (3 nodes)
  # -------------------------------
  redis-node-1:
    image: redis:7-alpine
    container_name: redis-node-1
    command: ["redis-server", "--port", "7000", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - 7000:7000
    networks:
      - autocomplete-net

  redis-node-2:
    image: redis:7-alpine
    container_name: redis-node-2
    command: ["redis-server", "--port", "7001", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - 7001:7001
    networks:
      - autocomplete-net

  redis-node-3:
    image: redis:7-alpine
    container_name: redis-node-3
    command: ["redis-server", "--port", "7002", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes"]
    ports:
      - 7002:7002
    networks:
      - autocomplete-net

  # -------------------------------
  # Spring Boot Kafka Consumer (Policy Service)
  # -------------------------------
#  policy-service:
#    build:
#      context: ./policy-service
#    container_name: policy-service
#    depends_on:
#      - kafka
#      - redis-node-1
#    networks:
#      - autocomplete-net

# -------------------------------
# Volumes & Network
# -------------------------------
volumes:
  namenode_data:
  datanode_data:
  mysql-data:

networks:
  autocomplete-net:
